
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id        Int      @id @default(autoincrement())
  name      String
  login     String   @unique
  password  String
  familyId  Int?     
  family    Family?  @relation(fields: [familyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
	expenses  Expense[]
	income		Income[]
}

model Family {
	id        Int      @id @default(autoincrement())
  invite    String   @unique
  createdAt DateTime @default(now())
  users     User[]
	expenses	Expense[]
	income		Income[]
}

model Expense {
	id        	Int      @id @default(autoincrement())
	sum					Int
	date				DateTime
	categoryId Int
	category 		CategoryExpense @relation(fields: [categoryId], references: [id])
	userId 			Int
	user 				User @relation(fields: [userId], references: [id])
	familyId		Int?
	family			Family? @relation(fields: [familyId], references: [id])
	createdAt	 	DateTime @default(now())
	updatedAt 	DateTime @updatedAt
}
model Income {
	id        	Int      @id @default(autoincrement())
	sum					Int
	date				DateTime
	categoryId Int
	category 		CategoryIncome @relation(fields: [categoryId], references: [id])
	userId 			Int
	user 				User @relation(fields: [userId], references: [id])
	familyId		Int?
	family			Family? @relation(fields: [familyId], references: [id])
	createdAt	 	DateTime @default(now())
	updatedAt 	DateTime @updatedAt
}

model CategoryExpense {
	id				Int @id @default(autoincrement())
	name 			String
	color     String
	createdAt DateTime @default(now())
	expenses Expense[]
}
model CategoryIncome {
	id				Int @id @default(autoincrement())
	name 			String
	color     String
	createdAt DateTime @default(now())
	expenses Income[]
}
